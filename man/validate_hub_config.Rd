% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_hub_config.R
\name{validate_hub_config}
\alias{validate_hub_config}
\title{Validate Hub config files against Infectious Disease Modeling Hubs schema.}
\usage{
validate_hub_config(
  hub_path = ".",
  schema_version = "from_config",
  branch = "main"
)
}
\arguments{
\item{hub_path}{Path to a local hub directory.}

\item{schema_version}{Character string specifying the json schema version to
be used for validation. The default value \code{"from_config"} will use the
version specified in the \code{schema_version} property of the config file.
\code{"latest"} will use the latest version available in the Infectious Disease
Modeling Hubs
\href{https://github.com/testorg-original/schemas}{schemas repository}.
Alternatively, a specific version of a schema (e.g. \code{"v0.0.1"})  can be
specified.}

\item{branch}{The branch of the Infectious Disease Modeling Hubs
\href{https://github.com/testorg-original/schemas}{schemas repository}
from which to fetch schema. Defaults to \code{"main"}.}
}
\value{
Returns a list of the results of validation, one for each \code{hub-config}
file validated. A value of \code{TRUE} for a given file indicates that validation
was successful.
A value of \code{FALSE} for a given file indicates that validation errors were
detected. Details of errors will be appended as a data.frame to an \code{errors} attribute.
To access the errors table for a given element use \code{attr(x, "errors")}
where \code{x} is the any element of the output of the function that is \code{FALSE}.
You can print a more concise and easier to view version of an errors table with
\code{\link[=view_config_val_errors]{view_config_val_errors()}}.
}
\description{
Validate the \code{admin.json} and \code{tasks.json} Hub config files in a single call.
}
\examples{
validate_hub_config(
  hub_path = system.file(
    "testhubs/simple/",
    package = "hubUtils"
  )
)
}
\seealso{
\code{\link[=view_config_val_errors]{view_config_val_errors()}}

Other functions supporting config file validation: 
\code{\link{validate_config}()},
\code{\link{view_config_val_errors}()}
}
\concept{functions supporting config file validation}
